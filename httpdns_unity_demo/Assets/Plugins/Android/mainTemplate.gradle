apply plugin: 'com.android.library'
**APPLY_PLUGINS**

// Kotlin dependency resolution strategy to prevent duplicate classes
configurations.all {
    resolutionStrategy {
        force "org.jetbrains.kotlin:kotlin-stdlib:1.8.0"
        force "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0"
        force "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0"
    }
    exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
    exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    
    // 阿里云HttpDNS Android SDK 2.6.5版本（Maven方式集成）
    implementation 'com.aliyun.ams:alicloud-android-httpdns:2.6.5'
    
    // Required support libraries for Android
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.annotation:annotation:1.6.0'
    implementation 'androidx.core:core:1.9.0'
    
    // HttpDNS SDK所需的网络工具库
    implementation 'commons-codec:commons-codec:1.15'
**DEPS**}

android {
    namespace "com.unity3d.player"
    ndkPath "**NDKPATH**"
    compileSdkVersion **APIVERSION**
    buildToolsVersion '**BUILDTOOLS**'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    defaultConfig {
        minSdkVersion **MINSDKVERSION**
        targetSdkVersion **TARGETSDKVERSION**
        ndk {
            abiFilters **ABIFILTERS**
        }
        versionCode **VERSIONCODE**
        versionName '**VERSIONNAME**'
        consumerProguardFiles 'proguard-unity.txt'**USER_PROGUARD**
        
        // HTTP DNS configuration - support cleartext traffic
        manifestPlaceholders = [usesCleartextTraffic: "true"]
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress = **BUILTIN_NOCOMPRESS** + unityStreamingAssets.tokenize(', ')
        ignoreAssetsPattern = "!.svn:!.git:!.ds_store:!*.scc:!CVS:!thumbs.db:!picasa.ini:!*~"
    }
    
    // Packaging configuration for AGP 7.4.2 - handle duplicate classes
    packagingOptions {
        pickFirst '**/kotlin/**'
        pickFirst '**/kotlinx/**'
        pickFirst '**/META-INF/kotlin/**'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/*.kotlin_module'
    }**PACKAGING_OPTIONS**
}
**IL_CPP_BUILD_SETUP**
**SOURCE_BUILD_SETUP**
**EXTERNAL_SOURCES**
